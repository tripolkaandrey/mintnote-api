openapi: 3.0.1
info:
  title: MintNote API
  version: v0.0.1
paths:
  /notes/:
    get:
      tags:
        - Notes
      summary: Get all notes
      security:
        - bearerAuth: [ ]
      operationId: getNotes
      responses:
        200:
          description: Notes were successfuly retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        401:
          description: User is not authenticated
    post:
      tags:
        - Notes
      summary: Create note
      security:
        - bearerAuth: [ ]
      operationId: createNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        201:
          description: Note was successfuly created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Note'
        400:
          description: Note was not created due to invalid params
          content:
            text/plain:
              schema:
                type: string
        401:
          description: User is not authenticated
        403:
          description: User is not allowed to perform this action on this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /notes/{id}/:
    get:
      tags:
        - Notes
      summary: Get note by id
      security:
        - bearerAuth: [ ]
      operationId: getNote
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        401:
          description: User is not authenticated
        403:
          description: User is not allowed to perform this action on this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: Note with provided id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      tags:
        - Notes
      summary: Delete note by id
      security:
        - bearerAuth: [ ]
      operationId: deleteNote
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Note was successfuly deleted
          content:
            application/json:
              schema:
                type: string
        401:
          description: User is not authenticated
        403:
          description: User is not allowed to perform this action on this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: Note with provided id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /notes/{id}/name/:
    put:
      tags:
        - Notes
      summary: Update note's name
      security:
        - bearerAuth: [ ]
      operationId: updateName
      requestBody:
        content:
          application/json:
            schema:
              type: string
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: Note's name was successfuly updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        401:
          description: User is not authenticated
        403:
          description: User is not allowed to perform this action on this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: Note with provided id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /notes/{id}/tags/:
    put:
      tags:
        - Notes
      summary: Update note's name
      security:
        - bearerAuth: [ ]
      operationId: updateTags
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: Note's tags were successfuly updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        401:
          description: User is not authenticated
        403:
          description: User is not allowed to perform this action on this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: Note with provided id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /notes/{id}/icon/:
    put:
      tags:
        - Notes
      summary: Update note's icon
      security:
        - bearerAuth: [ ]
      operationId: updateIcon
      requestBody:
        content:
          application/json:
            schema:
              type: string
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: Note's icon was successfuly updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        401:
          description: User is not authenticated
        403:
          description: User is not allowed to perform this action on this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: Note with provided id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /notes/{id}/parent/:
    put:
      tags:
        - Notes
      summary: Update note's parent
      security:
        - bearerAuth: [ ]
      operationId: updateParent
      requestBody:
        content:
          application/json:
            schema:
              type: string
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: Note's parent was successfuly updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        401:
          description: User is not authenticated
        403:
          description: User is not allowed to perform this action on this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: Note with provided id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /notes/{id}/content/:
    put:
      tags:
        - Notes
      summary: Update note's content
      security:
        - bearerAuth: [ ]
      operationId: updateContent
      requestBody:
        content:
          application/json:
            schema:
              type: string
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: Note's content was successfuly updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        401:
          description: User is not authenticated
        403:
          description: User is not allowed to perform this action on this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: Note with provided id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /notes/{id}/translation/{targetLanguage}/:
    get:
      tags:
        - Notes
      summary: Translate note to target language
      security:
        - bearerAuth: [ ]
      operationId: translate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: targetLanguage
          in: path
          required: true
          schema:
            type: string
          description: Language code supported by Google Translate API
      responses:
        200:
          description: Note was successfully translated
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid language code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        401:
          description: User is not authenticated
        403:
          description: User is not allowed to perform this action on this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        404:
          description: Note with provided id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        500:
          description: Translation service encountered internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /directories/:
    get:
      tags:
        - Directories
      summary: Get contents of directory
      description: Get contents of directory by providing full path to it
      security:
        - bearerAuth: [ ]
      operationId: getDirectoryContents
      parameters:
        - name: path
          in: query
          required: false
          example: /first/second/third
          schema:
            type: string
          description: Full path to directory. Path should match this structure "/<directory1>/<directory2>". To get root you may provide no value or "/"
      responses:
        200:
          description: Directory contents was successfuly retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryContents'
        400:
          description: Invalid path
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        401:
          description: User is not authenticated
        404:
          description: Directory with provided path was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Note:
      type: object
      properties:
        name:
          type: string
        icon:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        creationDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        parent:
          type: string
        id:
          type: string
          readOnly: true
        content:
          type: string
        userId:
          type: string
          readOnly: true
    Directory:
      type: object
      properties:
        name:
          type: string
        icon:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        creationDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        parent:
          type: string
    DirectoryContents:
      type: object
      properties:
        directories:
          type: array
          items:
            $ref: '#/components/schemas/Directory'
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
    Tag:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
    ApiError:
      type: object
      properties:
        status:
          type: number
        message:
          type: string